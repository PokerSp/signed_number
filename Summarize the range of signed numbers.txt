程序1：
#include  <stdio.h>
int main()
{
   char i;
   for( i=0;i<=256;i++)
   {
       
          printf("%d ",i);
   }

 
}
=============================================================================
发现程序并不是打印出（256+1）个数字，而是程序一直在运行 一直在计算 
所以用加入了一个变量x进行调试，如下：
程序2：
#include  <stdio.h>
int main()
{
   char i;
   int x;
for(x=0;x<127;x++)//查看在哪一个开始一直循环
    {
          printf("%d",x);
    for( i=0;i<=x;i++)
   {

          printf("%d ",i);
   }
          printf("\n");
}  
}
错误表达：  a是一个char类型，因此在每次++1时，a=127时输出127 但a=128时就等于-128，程序1的a永远也大于不了256，
最大值为127，最小者为-128.
=============================================================================
修改i后正常输入：
#include  <stdio.h>
int main()
{
   char a;
   int i=0;
   for( i=0;i<=256;i++)
   {
       a=i;
          printf("%d ",a);
   }

    
}
=============================================================================
 Sumarry：255
11111111111111111111111111111111  补码    高位1 为符号数 255整型提升 填补‘1’
11111111111111111111111111111110  反码
10000000000000000000000000000001  原码  -1
100000000

a=0-255 以256个数为循环     【 0-127  -128-(-1)】   char a=256 输出%d等于0     

